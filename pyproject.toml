[project]
name = "expired-file-remover"
version = "0.1.0"
description = "特定のディレクトリ内で作成・更新から一定期間を経過したファイルを削除するためのPythonパッケージ"
authors = [
    {name = "expired-file-remover 開発者",email = "dev@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = ["file", "cleanup", "expired", "maintenance", "utility"]

[project.urls]
"Homepage" = "https://github.com/your-organization/expired-file-remover"
"Bug Tracker" = "https://github.com/your-organization/expired-file-remover/issues"
"Documentation" = "https://your-organization.github.io/expired-file-remover"

[tool.poetry]
packages = [{include = "expired_file_remover", from = "src"}]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
generate-setup-file = false

[tool.setuptools]
include-package-data = true

[tool.poetry.dependencies]
python = ">=3.11,<4.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
black = "^25.1.0"
pytest = "^8.3.5"
isort = "^6.0.1"
flake8-pyproject = "^1.2.3"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
# Ignore Errors which can conflict with black
extend-ignore = ["E203", "E501", "W503"]
# Check explicitly for Errors (E), Warnings (W), and flake8 Errors (F)
select = ["E", "W", "F"]

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
namespace_packages = true
explicit_package_bases = false
mypy_path = "src"

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
